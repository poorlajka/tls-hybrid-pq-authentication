# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.29)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS MbedTLS::mayo_5 MbedTLS::less_lib MbedTLS::mayo_5_nistapi MbedTLS::less_wrapper MbedTLS::cross_wrapper MbedTLS::snova_wrapper MbedTLS::mayo_wrapper MbedTLS::qruov_wrapper MbedTLS::uov_wrapper MbedTLS::sdith_wrapper MbedTLS::faest_wrapper MbedTLS::sqisign_wrapper MbedTLS::mirath_wrapper MbedTLS::perk_wrapper MbedTLS::ryde_wrapper MbedTLS::mqom_wrapper MbedTLS::falcon_wrapper MbedTLS::dilithium_wrapper MbedTLS::sphincs_wrapper MbedTLS::hawk_wrapper MbedTLS::tfpsacrypto MbedTLS::everest MbedTLS::p256m MbedTLS::combiner MbedTLS::builtin MbedTLS::mbedx509 MbedTLS::mbedtls)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target MbedTLS::mayo_5
add_library(MbedTLS::mayo_5 STATIC IMPORTED)

set_target_properties(MbedTLS::mayo_5 PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MAYO_VARIANT=MAYO_5"
  INTERFACE_INCLUDE_DIRECTORIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mayo/MAYO-C/src/../include;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mayo/MAYO-C/src/."
  INTERFACE_LINK_LIBRARIES "MbedTLS::mayo_common_sys"
)

# Create imported target MbedTLS::less_lib
add_library(MbedTLS::less_lib STATIC IMPORTED)

# Create imported target MbedTLS::mayo_5_nistapi
add_library(MbedTLS::mayo_5_nistapi STATIC IMPORTED)

set_target_properties(MbedTLS::mayo_5_nistapi PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MAYO_VARIANT=MAYO_5"
  INTERFACE_INCLUDE_DIRECTORIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mayo/MAYO-C/src/mayo_5;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mayo/MAYO-C/src/../include;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mayo/MAYO-C/src/generic"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:MbedTLS::mayo_5>"
)

# Create imported target MbedTLS::less_wrapper
add_library(MbedTLS::less_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::less_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:MbedTLS::less_lib>"
)

# Create imported target MbedTLS::cross_wrapper
add_library(MbedTLS::cross_wrapper STATIC IMPORTED)

# Create imported target MbedTLS::snova_wrapper
add_library(MbedTLS::snova_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::snova_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/snova/SNOVA/src/build_libo/libsnovasym.a;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/snova/SNOVA/src/build/ct_functions.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/snova/SNOVA/src/build/rng.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/snova/SNOVA/src/build/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/snova/SNOVA/src/build/snova.o"
)

# Create imported target MbedTLS::mayo_wrapper
add_library(MbedTLS::mayo_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::mayo_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:MbedTLS::mayo_5_nistapi>"
)

# Create imported target MbedTLS::qruov_wrapper
add_library(MbedTLS::qruov_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::qruov_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/qruov/round2/src/qruov5q31L10v1120m120/avx2a/Fql.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/qruov/round2/src/qruov5q31L10v1120m120/avx2a/qruov.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/qruov/round2/src/qruov5q31L10v1120m120/avx2a/matrix.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/qruov/round2/src/qruov5q31L10v1120m120/avx2a/mgf.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/qruov/round2/src/qruov5q31L10v1120m120/avx2a/rng.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/qruov/round2/src/qruov5q31L10v1120m120/avx2a/sign.o;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::uov_wrapper
add_library(MbedTLS::uov_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::uov_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/blas_matrix_ref.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/blas_matrix.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/ov.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/ov_keypair.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/ov_keypair_computation.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/ov_publicmap.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/parallel_matrix_op.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/aes128_4r_ffs.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/fips202.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/utils.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/utils_hash.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/utils_prng.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/utils_randombytes.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/blas_matrix_avx2.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/gf16_tabs.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/gf256_tabs.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/aes128_4r_ffs.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/uov/pqov/x86aesni.o;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::sdith_wrapper
add_library(MbedTLS::sdith_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::sdith_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sdith/sdith/Optimized_Implementation/Hypercube_Variant/sdith_hypercube_cat5_gf256/sha3/libhash.a;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::faest_wrapper
add_library(MbedTLS::faest_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::faest_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/faest/faest-avx/build_bench/submission/Additional_Implementations/avx2/faest_256s/libfaest.a;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/faest/faest-avx/build_bench/submission/Additional_Implementations/avx2/faest_256s/randomness_randombytes.o"
)

# Create imported target MbedTLS::sqisign_wrapper
add_library(MbedTLS::sqisign_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::sqisign_wrapper PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "SQISIGN_VARIANT=lvl5"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:MbedTLS::sqisign_lvl5_nistapi>"
)

# Create imported target MbedTLS::mirath_wrapper
add_library(MbedTLS::mirath_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::mirath_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/rng.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/common/fips202.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/common/hash.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/common/KeccakHash.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/common/KeccakP-1600-opt64.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/common/prng.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/mirath_ggm_tree.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/mirath_keygen.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/mirath_matrix_ff.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/mirath_parsing.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/mirath_sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/mirath_tcith.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mirath/mirath/Optimized_Implementation/mirath_tcith/avx/mirath_tcith_5b_short/mirath_verify.o;\$<LINK_ONLY:OpenSSL::SSL>;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::perk_wrapper
add_library(MbedTLS::perk_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::perk_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/arithmetic.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/common.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/keygen.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/parsing.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/permutation.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/signature.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/symmetric.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/symmetric_times4.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/theta_tree.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/verbose.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/src/verify.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/cryptocode/crypto_memset.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/XKCP/KeccakSpongetimes4.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/XKCP/KeccakSponge.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/XKCP/KeccakHash.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/XKCP/SimpleFIPS202.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/XKCP/KeccakP-1600-times4-SIMD256.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/XKCP/KeccakHashtimes4.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/randombytes/rng.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/XKCP/KeccakP-1600-AVX2.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/djbsort/sort.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/perk/perk/Optimized_Implementation/perk-256-short-5/build/lib/djbsort/djbsort.o;\$<LINK_ONLY:OpenSSL::SSL>;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::ryde_wrapper
add_library(MbedTLS::ryde_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::ryde_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/rbc_67_elt.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/rbc_67_vec.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/rbc_67_vspace.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/rbc_67_mat.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/rbc_67_mat_fq.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/keypair.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/signature.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/verification.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/parsing.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/ggm_tree.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/tcith-rijndael.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/SimpleFIPS202.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/ryde/ryde/Optimized_Implementation/ryde5s/bin/build/randombytes.o;\$<LINK_ONLY:OpenSSL::SSL>;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::mqom_wrapper
add_library(MbedTLS::mqom_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::mqom_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/rijndael/rijndael_ref.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/rijndael/rijndael_table.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/rijndael/rijndael_aes_ni.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/xof.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/prg.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/ggm_tree.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/expand_mq.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/keygen.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/blc.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/piop.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/mqom/mqom-v2/sha3/libhash.a;\$<LINK_ONLY:OpenSSL::SSL>;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::falcon_wrapper
add_library(MbedTLS::falcon_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::falcon_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/codec.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/common.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/fft.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/fpr.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/keygen.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/nist.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/rng.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/shake.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/falcon/falcon-round3/Optimized_Implementation/falcon1024/falcon1024avx2/build/vrfy.o"
)

# Create imported target MbedTLS::dilithium_wrapper
add_library(MbedTLS::dilithium_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::dilithium_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/consts.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/f1600x4.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/fips202.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/fips202x4.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/invntt.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/ntt.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/packing.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/pointwise.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/poly.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/polyvec.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/randombytes.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/rejsample.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/rounding.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/shuffle.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/dilithium/dilithium/avx2/symmetric-shake.o;\$<LINK_ONLY:OpenSSL::SSL>;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::sphincs_wrapper
add_library(MbedTLS::sphincs_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::sphincs_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/address.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/rng.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/wots.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/utils.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/fors.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/sha256.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/hash_sha256.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/sphincs/sphincs/Optimized_Implementation/crypto_sign/sphincs-sha256-256s-robust/thash_sha256_robust.o;\$<LINK_ONLY:OpenSSL::SSL>;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MbedTLS::hawk_wrapper
add_library(MbedTLS::hawk_wrapper STATIC IMPORTED)

set_target_properties(MbedTLS::hawk_wrapper PROPERTIES
  INTERFACE_LINK_LIBRARIES "/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/hawk_kgen.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/hawk_sign.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/hawk_vrfy.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/ng_fxp.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/ng_hawk.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/ng_mp31.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/ng_ntru.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/ng_poly.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/ng_zint31.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/sha3.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/api.o;/home/viktor/tls-hybrid-authentication/mbedtls/combiner/nist_algorithms/hawk/dev/NIST/Optimized_Implementation/avx2/hawk1024/rng.o"
)

# Create imported target MbedTLS::tfpsacrypto
add_library(MbedTLS::tfpsacrypto STATIC IMPORTED)

set_target_properties(MbedTLS::tfpsacrypto PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/include/;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/builtin/include/"
  INTERFACE_LINK_LIBRARIES "MbedTLS::builtin"
)

# Create imported target MbedTLS::everest
add_library(MbedTLS::everest STATIC IMPORTED)

set_target_properties(MbedTLS::everest PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/everest/include;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/include;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/builtin/include"
)

# Create imported target MbedTLS::p256m
add_library(MbedTLS::p256m STATIC IMPORTED)

set_target_properties(MbedTLS::p256m PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/p256-m;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/p256-m/p256-m;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/include;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/builtin/include;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/everest/include"
)

# Create imported target MbedTLS::combiner
add_library(MbedTLS::combiner STATIC IMPORTED)

set_target_properties(MbedTLS::combiner PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:MbedTLS::less_wrapper>;\$<LINK_ONLY:MbedTLS::cross_wrapper>;\$<LINK_ONLY:MbedTLS::snova_wrapper>;\$<LINK_ONLY:MbedTLS::mayo_wrapper>;\$<LINK_ONLY:MbedTLS::qruov_wrapper>;\$<LINK_ONLY:MbedTLS::uov_wrapper>;\$<LINK_ONLY:MbedTLS::sdith_wrapper>;\$<LINK_ONLY:MbedTLS::faest_wrapper>;\$<LINK_ONLY:MbedTLS::sqisign_wrapper>;\$<LINK_ONLY:MbedTLS::mirath_wrapper>;\$<LINK_ONLY:MbedTLS::perk_wrapper>;\$<LINK_ONLY:MbedTLS::ryde_wrapper>;\$<LINK_ONLY:MbedTLS::mqom_wrapper>;\$<LINK_ONLY:MbedTLS::falcon_wrapper>;\$<LINK_ONLY:MbedTLS::dilithium_wrapper>;\$<LINK_ONLY:MbedTLS::sphincs_wrapper>;\$<LINK_ONLY:MbedTLS::hawk_wrapper>;\$<LINK_ONLY:MbedTLS::ed25519>"
)

# Create imported target MbedTLS::builtin
add_library(MbedTLS::builtin STATIC IMPORTED)

set_target_properties(MbedTLS::builtin PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/builtin/src;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/builtin/include;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/include"
  INTERFACE_LINK_LIBRARIES "MbedTLS::combiner;\$<LINK_ONLY:MbedTLS::combiner>;MbedTLS::everest;\$<LINK_ONLY:MbedTLS::combiner>;MbedTLS::p256m;\$<LINK_ONLY:MbedTLS::combiner>"
)

# Create imported target MbedTLS::mbedx509
add_library(MbedTLS::mbedx509 STATIC IMPORTED)

set_target_properties(MbedTLS::mbedx509 PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/viktor/tls-hybrid-authentication/mbedtls/include/;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/include/;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/builtin/include/"
  INTERFACE_LINK_LIBRARIES "MbedTLS::tfpsacrypto"
)

# Create imported target MbedTLS::mbedtls
add_library(MbedTLS::mbedtls STATIC IMPORTED)

set_target_properties(MbedTLS::mbedtls PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/viktor/tls-hybrid-authentication/mbedtls/include/;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/include/;/home/viktor/tls-hybrid-authentication/mbedtls/tf-psa-crypto/drivers/builtin/include/"
  INTERFACE_LINK_LIBRARIES "MbedTLS::mbedx509"
)

# Import target "MbedTLS::mayo_5" for configuration "RELEASE"
set_property(TARGET MbedTLS::mayo_5 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::mayo_5 PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/mayo/MAYO-C/src/libmayo_5.a"
  )

# Import target "MbedTLS::less_lib" for configuration "RELEASE"
set_property(TARGET MbedTLS::less_lib APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::less_lib PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "ASM;C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/less/libless_lib.a"
  )

# Import target "MbedTLS::mayo_5_nistapi" for configuration "RELEASE"
set_property(TARGET MbedTLS::mayo_5_nistapi APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::mayo_5_nistapi PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/mayo/MAYO-C/src/libmayo_5_nistapi.a"
  )

# Import target "MbedTLS::less_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::less_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::less_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/less/libless_wrapper.a"
  )

# Import target "MbedTLS::cross_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::cross_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::cross_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/cross/libcross_wrapper.a"
  )

# Import target "MbedTLS::snova_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::snova_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::snova_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/snova/libsnova_wrapper.a"
  )

# Import target "MbedTLS::mayo_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::mayo_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::mayo_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/mayo/libmayo_wrapper.a"
  )

# Import target "MbedTLS::qruov_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::qruov_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::qruov_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/qruov/libqruov_wrapper.a"
  )

# Import target "MbedTLS::uov_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::uov_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::uov_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/uov/libuov_wrapper.a"
  )

# Import target "MbedTLS::sdith_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::sdith_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::sdith_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/sdith/libsdith_wrapper.a"
  )

# Import target "MbedTLS::faest_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::faest_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::faest_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/faest/libfaest_wrapper.a"
  )

# Import target "MbedTLS::sqisign_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::sqisign_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::sqisign_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/sqisign/libsqisign_wrapper.a"
  )

# Import target "MbedTLS::mirath_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::mirath_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::mirath_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/mirath/libmirath_wrapper.a"
  )

# Import target "MbedTLS::perk_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::perk_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::perk_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/perk/libperk_wrapper.a"
  )

# Import target "MbedTLS::ryde_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::ryde_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::ryde_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/ryde/libryde_wrapper.a"
  )

# Import target "MbedTLS::mqom_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::mqom_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::mqom_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/mqom/libmqom_wrapper.a"
  )

# Import target "MbedTLS::falcon_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::falcon_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::falcon_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/falcon/libfalcon_wrapper.a"
  )

# Import target "MbedTLS::dilithium_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::dilithium_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::dilithium_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/dilithium/libdilithium_wrapper.a"
  )

# Import target "MbedTLS::sphincs_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::sphincs_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::sphincs_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/sphincs/libsphincs_wrapper.a"
  )

# Import target "MbedTLS::hawk_wrapper" for configuration "RELEASE"
set_property(TARGET MbedTLS::hawk_wrapper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::hawk_wrapper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/nist_algorithms/hawk/libhawk_wrapper.a"
  )

# Import target "MbedTLS::tfpsacrypto" for configuration "RELEASE"
set_property(TARGET MbedTLS::tfpsacrypto APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::tfpsacrypto PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/tf-psa-crypto/core/libtfpsacrypto.a"
  )

# Import target "MbedTLS::everest" for configuration "RELEASE"
set_property(TARGET MbedTLS::everest APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::everest PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/tf-psa-crypto/drivers/everest/libeverest.a"
  )

# Import target "MbedTLS::p256m" for configuration "RELEASE"
set_property(TARGET MbedTLS::p256m APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::p256m PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/tf-psa-crypto/drivers/p256-m/libp256m.a"
  )

# Import target "MbedTLS::combiner" for configuration "RELEASE"
set_property(TARGET MbedTLS::combiner APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::combiner PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/combiner/libcombiner.a"
  )

# Import target "MbedTLS::builtin" for configuration "RELEASE"
set_property(TARGET MbedTLS::builtin APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::builtin PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/tf-psa-crypto/drivers/builtin/libbuiltin.a"
  )

# Import target "MbedTLS::mbedx509" for configuration "RELEASE"
set_property(TARGET MbedTLS::mbedx509 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::mbedx509 PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/library/libmbedx509.a"
  )

# Import target "MbedTLS::mbedtls" for configuration "RELEASE"
set_property(TARGET MbedTLS::mbedtls APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MbedTLS::mbedtls PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/viktor/tls-hybrid-authentication/mbedtls/build_dir2/library/libmbedtls.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
